<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
       http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd">

    <!--<tx:annotation-driven/>-->

    <!-- Editor-Inspection-Inactive profile highlighting-(Error) Скрывает неактивный профиль-->
<!--
    <jdbc:initialize-database data-source="dataSource" enabled="${database.init}">
        <jdbc:script location="classpath:db/${jdbc.initLocation}"/>
        <jdbc:script encoding="utf-8" location="classpath:db/populateDB.sql"/>
    </jdbc:initialize-database>

    <beans profile="hsqldb">
        <context:property-placeholder location="classpath:db/hsqldb.properties" system-properties-mode="OVERRIDE"/>

        &lt;!&ndash;no pooling&ndash;&gt;
        <bean id="dataSource"
              class="org.springframework.jdbc.datasource.DriverManagerDataSource"
              p:driverClassName="org.hsqldb.jdbcDriver"
              p:url="${database.url}"
              p:username="${database.username}"
              p:password="${database.password}"/>
    </beans>

    <beans profile="postgres">
        <context:property-placeholder location="classpath:db/postgres.properties" system-properties-mode="OVERRIDE"/>

        <bean id="dataSource"
              class="org.apache.tomcat.jdbc.pool.DataSource"
              p:driverClassName="org.postgresql.Driver"
              p:url="${database.url}"
              p:username="${database.username}"
              p:password="${database.password}"/>
    </beans>

    <beans profile="tomcat">
        <jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/accounting_of_shop"/>
        <context:property-placeholder location="classpath:db/tomcat.properties" system-properties-mode="OVERRIDE"/>
    </beans>

    <beans profile="jdbc">
        <context:component-scan base-package="com.shop.of.accounting.**.repository.jdbc"/>
        <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
            <constructor-arg ref="dataSource"/>
        </bean>

        <bean id="namedJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
            <constructor-arg ref="dataSource"/>
        </bean>

        <bean id="transactionManager"
              class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
            <property name="dataSource" ref="dataSource" />
        </bean>
    </beans>

    <beans profile="heroku">
        <context:property-placeholder location="classpath:/db/heroku.properties" system-properties-mode="OVERRIDE"/>

        <bean class="java.net.URI" id="dbUrl">
            <constructor-arg value="${DATABASE_URL}"/>
        </bean>
        <bean id="dataSource"
              class="org.apache.tomcat.jdbc.pool.DataSource"
              p:url="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + @dbUrl.getPath() }"
              p:username="#{ @dbUrl.getUserInfo().split(':')[0] }"
              p:password="#{ @dbUrl.getUserInfo().split(':')[1] }"
              p:driverClassName="org.postgresql.Driver"
              p:validationQuery="SELECT 1"
              p:maxActive="10"
              p:minIdle="2"
              p:maxWait="20000"
              p:initialSize="2"
              p:maxIdle="5"
              p:testOnBorrow="true"
              p:removeAbandoned="true"
              p:testOnConnect="true"
              p:testWhileIdle="true"/>
    </beans>-->

    <bean class="java.net.URI" id="dbUrl">
<!--        <constructor-arg value="postgres://dcmuyoswrhmkcf:ec8dcadc3b3ebc994017bc91a3b2864ae723d312a48049f073ca0dffe3e6a30e@ec2-79-125-6-160.eu-west-1.compute.amazonaws.com:5432/devrn0gn31qru"/>-->
        <constructor-arg value="${DATABASE_URL}"/>
    </bean>
    <bean id="dataSource"
          class="org.apache.tomcat.jdbc.pool.DataSource"
          p:url="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + @dbUrl.getPath() }"
          p:username="#{ @dbUrl.getUserInfo().split(':')[0] }"
          p:password="#{ @dbUrl.getUserInfo().split(':')[1] }"
          p:driverClassName="org.postgresql.Driver"
          p:validationQuery="SELECT 1"
          p:maxActive="10"
          p:minIdle="2"
          p:maxWait="20000"
          p:initialSize="2"
          p:maxIdle="5"
          p:testOnBorrow="true"
          p:removeAbandoned="true"
          p:testOnConnect="true"
          p:testWhileIdle="true"/>

         <!--   <bean id="dataSource"
              class="org.springframework.jdbc.datasource.DriverManagerDataSource"
              p:driverClassName="org.postgresql.Driver"
              p:url="jdbc:postgresql://localhost:5432/accounting_of_shop"
              p:username="user"
              p:password="password"/>-->

    <context:component-scan base-package="com.shop.of.accounting.**.repository.jdbc"/>

    <bean id = "jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg ref="dataSource"/>
    </bean>
    <bean class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
        <constructor-arg ref="dataSource"/>
    </bean>

<!--    <bean id="sessionFactory"
           class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
         <property name="dataSource"
                   ref="dataSource"/>
         <property name="packagesToScan"
                   value="com.shop.of.accounting.model"/>
         <property name="hibernateProperties">
             <props>
                 <prop key="hibernate.hbm2ddl.auto">
                     update
                 </prop>
                 <prop key="hibernate.dialect">
                     ch.qos.logback.core.db.dialect.PostgreSQLDialect
                 </prop>
             </props>
         </property>
     </bean>

     <bean id="txManager"
           class="org.springframework.orm.hibernate5.HibernateTransactionManager">
         <property name="sessionFactory" ref="sessionFactory"/>
     </bean>

     <context:component-scan base-package="com.shop.of.accounting.**.repository.session_factory"/>-->

</beans>